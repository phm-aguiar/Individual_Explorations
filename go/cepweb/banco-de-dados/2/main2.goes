package main

import (
	"fmt"

	"gorm.io/driver/mysql"
	"gorm.io/gorm"
)

type Category struct {
	ID       int    `gorm:"primary_key" json:"id"`
	Name     string `gorm:"type:varchar(100)" json:"name"`
	Products []Product
}

type Product struct {
	ID         int     `gorm:"primary_key" json:"id"`
	Name       string  `gorm:"type:varchar(100)" json:"name"`
	Price      float64 `gorm:"type:decimal" json:"price"`
	CategoryID int     `json:"category_id"`
	Category   Category
	gorm.Model
}

func main() {
	dsn := "root:root@tcp(localhost:3307)/goexpert?charset=utf8mb4&parseTime=True&loc=Local"
	db, err := gorm.Open(mysql.Open(dsn), &gorm.Config{})
	if err != nil {
		panic(err)
	}
	db.AutoMigrate(&Product{}, &Category{})

	// create category
	category := Category{Name: "Cozinha"}
	db.Create(&category)

	// create product
	db.Create(&Product{Name: "panela", Price: 99.0, CategoryID: 1})

	// // db.Create(&SerialNumber{Number: "123456", ProductID: 1})
	// fetch products
	var categories []Category
	err = db.Model(&Category{}).Preload("Products").Find(&categories).Error
	if err != nil {
		panic(err)
	}
	for _, category := range categories {
		fmt.Println(category.Name)
		for _, product := range category.Products {
			fmt.Println("- ", product.Name)
		}
	}
}
